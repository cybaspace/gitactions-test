name: Test GitHub-Actions

env:
  AZURE_WEBAPP_NAME: ktor-demo-webapp
  JAVA_VERSION: '11'

on:
  push:
    branches: [ main ]
    paths-ignore:
      - README.md
      -
  pull_request:
    branches: [ main ]
    paths-ignore:
      - README.md

jobs:
  build:
    name: "Build"
    runs-on: ubuntu-latest

    steps:
      - run: echo "The job was triggered by a ${{ github.event_name }} event."

      - run: echo "This job is running on a ${{ runner.os }} server hosted by GitHub"

      - run: echo "The name of the branch is ${{ github.ref }} and your repository is ${{ github.repository }}"

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Validate gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'adopt'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      #- name: Gradle compile and test
      #  run: ./gradlew clean test

      - name: Create fat jar
        run: ./gradlew shadowJar --no-daemon

      - name: Conditional step ONLY for pull request
        if: ${{ github.event_name == 'pull_request' }}
        run: echo "You see this because it's a pull request"

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: java-app
          path: '${{ github.workspace }}/build/libs/*-all.zip'

      - name: Upload artifact for deployment job
          uses: actions/upload-artifact@v2
          with:
            name: dockerfile
            path: '${{ github.workspace }}/Dockerfile'

  build-image:
    name: Build a container image
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Development'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: java-app

      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: dockerfile

      - name: Create container image
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          slot-name: 'production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_D76E313513DF4BB7B7678512D179D83D }}
          package: '*.jar'

#      - name: 'Login via Azure CLI'
#        uses: azure/login@v1
#        with:
#          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: 'Build and push image'
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - run: |
          docker build . -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/webapp:${{ github.sha }}
          docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/webapp:${{ github.sha }}


  deploy:
    name: Deploy WebApp to Azure
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Development'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: java-app

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          slot-name: 'production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_D76E313513DF4BB7B7678512D179D83D }}
          package: '*.jar'
